// tests/lib-validation.js - Quick validation of all library files

console.log('üß™ Testing Library Files...\n');

// Test 1: Middleware
console.log('1Ô∏è‚É£ Testing middleware...');
try {
  const middleware = require('../lib/middleware');
  console.log('   ‚úÖ publicRoute:', typeof middleware.publicRoute === 'function');
  console.log('   ‚úÖ protectedRoute:', typeof middleware.protectedRoute === 'function');
  console.log('   ‚úÖ withCORS:', typeof middleware.withCORS === 'function');
  console.log('   ‚úÖ compose:', typeof middleware.compose === 'function');
} catch (error) {
  console.log('   ‚ùå Failed:', error.message);
}

// Test 2: eBay API
console.log('\n2Ô∏è‚É£ Testing eBay API...');
try {
  const eBayAPI = require('../lib/ebay');
  const ebay = new eBayAPI();
  console.log('   ‚úÖ Constructor works');
  console.log('   ‚úÖ Configured:', ebay.isConfigured());
  console.log('   ‚úÖ Environment:', ebay.environment);
} catch (error) {
  console.log('   ‚ùå Failed:', error.message);
}

// Test 3: Amazon Affiliate
console.log('\n3Ô∏è‚É£ Testing Amazon Affiliate...');
try {
  const AmazonAPI = require('../lib/amazonAffiliate');
  const amazon = new AmazonAPI();
  const asin = amazon.extractASIN('https://www.amazon.com/dp/B08N5WRWNW');
  console.log('   ‚úÖ Constructor works');
  console.log('   ‚úÖ ASIN extraction:', asin);
  console.log('   ‚úÖ Tag validation:', amazon.validateTag('test-20'));
} catch (error) {
  console.log('   ‚ùå Failed:', error.message);
}

// Test 4: Rate Limiter
console.log('\n4Ô∏è‚É£ Testing Rate Limiter...');
try {
  const { getRateLimiter, getStats } = require('../lib/rateLimiter');
  const limiter = getRateLimiter({ perMinute: 10, perDay: 100 });
  console.log('   ‚úÖ Constructor works');
  console.log('   ‚úÖ Stats:', getStats());
} catch (error) {
  console.log('   ‚ùå Failed:', error.message);
}

// Test 5: Scraper
console.log('\n5Ô∏è‚É£ Testing Scraper...');
try {
  const scraper = require('../lib/scraper');
  console.log('   ‚úÖ Supported stores:', scraper.getSupportedStores().length);
  console.log('   ‚úÖ URL check:', scraper.isUrlSupported('https://www.amazon.com/test'));
  console.log('   ‚úÖ Error classes:', typeof scraper.ScraperError === 'function');
} catch (error) {
  console.log('   ‚ùå Failed:', error.message);
}

// Test 6: Validators
console.log('\n6Ô∏è‚É£ Testing Validators...');
try {
  const validators = require('../lib/validators');
  console.log('   ‚úÖ validateUrl:', typeof validators.validateUrl === 'function');
  console.log('   ‚úÖ validateApiKey:', typeof validators.validateApiKey === 'function');
  console.log('   ‚úÖ Schemas defined:', Object.keys(validators).length);
} catch (error) {
  console.log('   ‚ùå Failed:', error.message);
}

console.log('\n‚ú® Library validation complete!');